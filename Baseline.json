[{"violation":{"ruleDescription":"The correct positioning of braces that introduce a block of code or member list is highly controversial. No matter which style is preferred, consistency is key. Apart from different tastes, the positioning of braces can also have a significant impact on the readability of the code, especially for visually impaired developers. This rule ensures that braces are preceded by a single space and on the same line as the declaration. Comments between the declaration and the opening brace are respected. Check out the `contrasted_opening_brace` rule for a different style.","reason":"Opening braces should be preceded by a single space and on the same line as the declaration","ruleIdentifier":"opening_brace","ruleName":"Opening Brace Spacing","location":{"character":3,"file":"HabitsWidget\/HabitsWidget.swift","line":20},"severity":"warning"},"text":"  {"},{"violation":{"ruleIdentifier":"opening_brace","location":{"line":75,"character":5,"file":"HabitsWidget\/HabitsWidget.swift"},"ruleName":"Opening Brace Spacing","severity":"warning","ruleDescription":"The correct positioning of braces that introduce a block of code or member list is highly controversial. No matter which style is preferred, consistency is key. Apart from different tastes, the positioning of braces can also have a significant impact on the readability of the code, especially for visually impaired developers. This rule ensures that braces are preceded by a single space and on the same line as the declaration. Comments between the declaration and the opening brace are respected. Check out the `contrasted_opening_brace` rule for a different style.","reason":"Opening braces should be preceded by a single space and on the same line as the declaration"},"text":"    {"},{"violation":{"ruleDescription":"Lines should not span too many characters.","ruleName":"Line Length","reason":"Line should be 110 characters or less; currently it has 111 characters","severity":"warning","location":{"file":"HabitsWidget\/HabitsWidgetControl.swift","line":123},"ruleIdentifier":"line_length"},"text":"\/\/         \"Error adding entry: \\(error) \\(newEntry ?? CalendarEntry(date: today, count: 1, completed: false))\""},{"violation":{"ruleDescription":"Closing brace with closing parenthesis should not have any whitespaces in the middle","ruleIdentifier":"closing_brace","ruleName":"Closing Brace Spacing","severity":"warning","location":{"line":67,"character":94,"file":"My Year\/Components\/Calendars\/GridView.swift"},"reason":"Closing brace with closing parenthesis should not have any whitespaces in the middle"},"text":"        let cacheKey = \"\\(calendar.name)-\\(calendar.entries.values.reduce(0) { $0 + $1.count } )\""},{"text":"      provider.loadObject(ofClass: NSString.self) { (object, error) in","violation":{"ruleIdentifier":"unused_closure_parameter","ruleName":"Unused Closure Parameter","severity":"warning","location":{"character":62,"file":"My Year\/ContentView.swift","line":23},"ruleDescription":"Unused parameter in a closure should be replaced with _","reason":"Unused parameter in a closure should be replaced with _"}},{"text":"            {","violation":{"severity":"warning","ruleDescription":"The correct positioning of braces that introduce a block of code or member list is highly controversial. No matter which style is preferred, consistency is key. Apart from different tastes, the positioning of braces can also have a significant impact on the readability of the code, especially for visually impaired developers. This rule ensures that braces are preceded by a single space and on the same line as the declaration. Comments between the declaration and the opening brace are respected. Check out the `contrasted_opening_brace` rule for a different style.","ruleName":"Opening Brace Spacing","location":{"character":13,"line":29,"file":"My Year\/ContentView.swift"},"reason":"Opening braces should be preceded by a single space and on the same line as the declaration","ruleIdentifier":"opening_brace"}},{"text":"            }) {","violation":{"severity":"warning","location":{"character":16,"file":"My Year\/ContentView.swift","line":129},"ruleName":"Multiple Closures with Trailing Closure","reason":"Trailing closure syntax should not be used when passing more than one closure argument","ruleIdentifier":"multiple_closures_with_trailing_closure","ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument"}},{"text":"            }) {","violation":{"ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument","ruleName":"Multiple Closures with Trailing Closure","location":{"file":"My Year\/ContentView.swift","character":16,"line":138},"ruleIdentifier":"multiple_closures_with_trailing_closure","reason":"Trailing closure syntax should not be used when passing more than one closure argument","severity":"warning"}},{"text":"    motionManager.startDeviceMotionUpdates(to: .main) { [weak self] (data: CMDeviceMotion?, error) in","violation":{"reason":"Unused parameter in a closure should be replaced with _","location":{"file":"My Year\/Managers\/MotionManager.swift","line":19,"character":93},"ruleName":"Unused Closure Parameter","severity":"warning","ruleDescription":"Unused parameter in a closure should be replaced with _","ruleIdentifier":"unused_closure_parameter"}},{"text":"    if !store.calendars.contains(where: { $0.id.uuidString == request.identifier }) {","violation":{"reason":"`where` clauses are preferred over a single `if` inside a `for`","ruleIdentifier":"for_where","location":{"file":"My Year\/Managers\/Notifications.swift","character":5,"line":46},"ruleDescription":"`where` clauses are preferred over a single `if` inside a `for`","ruleName":"Prefer For-Where","severity":"warning"}},{"text":"  {","violation":{"severity":"warning","ruleIdentifier":"opening_brace","reason":"Opening braces should be preceded by a single space and on the same line as the declaration","ruleDescription":"The correct positioning of braces that introduce a block of code or member list is highly controversial. No matter which style is preferred, consistency is key. Apart from different tastes, the positioning of braces can also have a significant impact on the readability of the code, especially for visually impaired developers. This rule ensures that braces are preceded by a single space and on the same line as the declaration. Comments between the declaration and the opening brace are respected. Check out the `contrasted_opening_brace` rule for a different style.","ruleName":"Opening Brace Spacing","location":{"line":68,"file":"My Year\/Managers\/Notifications.swift","character":3}}},{"text":"        }) {","violation":{"location":{"file":"My Year\/Modifiers\/drag.swift","line":40,"character":12},"reason":"Trailing closure syntax should not be used when passing more than one closure argument","ruleName":"Multiple Closures with Trailing Closure","ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument","ruleIdentifier":"multiple_closures_with_trailing_closure","severity":"warning"}},{"text":"        }) {","violation":{"ruleName":"Multiple Closures with Trailing Closure","severity":"warning","location":{"character":12,"file":"My Year\/Modifiers\/drag.swift","line":46},"ruleIdentifier":"multiple_closures_with_trailing_closure","ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument","reason":"Trailing closure syntax should not be used when passing more than one closure argument"}},{"text":"struct My_YearApp: App {","violation":{"ruleIdentifier":"superfluous_disable_command","ruleName":"Superfluous Disable Command","severity":"warning","location":{"line":16,"file":"My Year\/My_YearApp.swift"},"reason":"SwiftLint rule 'type_name' did not trigger a violation in the disabled region; remove the disable command","ruleDescription":"SwiftLint 'disable' commands are superfluous when the disabled rule would not have triggered a violation in the disabled region. Use \" - \" if you wish to document a command."}},{"text":"      if entry.count > 0 {","violation":{"location":{"character":16,"file":"My Year\/Utils\/Calendar\/colorForDay.swift","line":21},"ruleIdentifier":"empty_count","severity":"error","ruleDescription":"Prefer checking `isEmpty` over comparing `count` to zero","ruleName":"Empty Count","reason":"Prefer checking `isEmpty` over comparing `count` to zero"}},{"text":"      if entry.count > 0 {","violation":{"reason":"Prefer checking `isEmpty` over comparing `count` to zero","severity":"error","ruleDescription":"Prefer checking `isEmpty` over comparing `count` to zero","ruleIdentifier":"empty_count","ruleName":"Empty Count","location":{"file":"My Year\/Utils\/Calendar\/colorForDay.swift","line":29,"character":16}}},{"text":"        ) { index, calendar in","violation":{"ruleIdentifier":"unused_closure_parameter","ruleName":"Unused Closure Parameter","ruleDescription":"Unused parameter in a closure should be replaced with _","severity":"warning","location":{"file":"My Year\/Views\/CalendarsOverview\/CalendarsOverview.swift","line":63,"character":20},"reason":"Unused parameter in a closure should be replaced with _"}},{"text":"        Button(action: { isReorderActive.toggle() }) {","violation":{"reason":"Trailing closure syntax should not be used when passing more than one closure argument","ruleIdentifier":"multiple_closures_with_trailing_closure","ruleName":"Multiple Closures with Trailing Closure","ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument","location":{"line":106,"character":54,"file":"My Year\/Views\/CalendarsOverview\/CalendarsOverview.swift"},"severity":"warning"}},{"text":"struct CustomCalendarView: View {","violation":{"ruleIdentifier":"type_body_length","severity":"warning","reason":"Type body should span 300 lines or less excluding comments and whitespace: currently spans 317 lines","ruleName":"Type Body Length","ruleDescription":"Type bodies should not span too many lines","location":{"file":"My Year\/Views\/CustomCalendarView.swift","character":1,"line":37}}},{"text":"    \/\/ TODO: Implement clearEntries(calendarId:) in CustomCalendarStore to enable clearing before filling.","violation":{"ruleDescription":"TODOs and FIXMEs should be resolved.","reason":"TODOs should be resolved (Implement clearEntries(calenda...)","ruleIdentifier":"todo","ruleName":"Todo","severity":"warning","location":{"file":"My Year\/Views\/CustomCalendarView.swift","line":61,"character":8}}},{"text":"          let entry = CalendarEntry(date: date, count: count, completed: count > 0)","violation":{"ruleDescription":"Prefer checking `isEmpty` over comparing `count` to zero","ruleName":"Empty Count","severity":"error","ruleIdentifier":"empty_count","reason":"Prefer checking `isEmpty` over comparing `count` to zero","location":{"file":"My Year\/Views\/CustomCalendarView.swift","line":78,"character":74}}},{"text":"  private func getStats() -> CalendarStats {","violation":{"ruleIdentifier":"function_body_length","ruleName":"Function Body Length","severity":"warning","location":{"line":110,"character":16,"file":"My Year\/Views\/CustomCalendarView.swift"},"ruleDescription":"Function bodies should not span too many lines","reason":"Function body should span 50 lines or less excluding comments and whitespace: currently spans 53 lines"}},{"text":"        return entry.count > 0","violation":{"ruleDescription":"Prefer checking `isEmpty` over comparing `count` to zero","severity":"error","ruleName":"Empty Count","location":{"character":22,"line":116,"file":"My Year\/Views\/CustomCalendarView.swift"},"reason":"Prefer checking `isEmpty` over comparing `count` to zero","ruleIdentifier":"empty_count"}},{"text":"    longestStreak = max(longestStreak, tempLongestStreak)  \/\/ Check if the streak continues to the beginning of the year","violation":{"severity":"warning","location":{"line":139,"file":"My Year\/Views\/CustomCalendarView.swift"},"reason":"Line should be 110 characters or less; currently it has 120 characters","ruleIdentifier":"line_length","ruleName":"Line Length","ruleDescription":"Lines should not span too many characters."}},{"text":"                }) {","violation":{"ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument","ruleName":"Multiple Closures with Trailing Closure","severity":"warning","location":{"character":20,"line":235,"file":"My Year\/Views\/CustomCalendarView.swift"},"reason":"Trailing closure syntax should not be used when passing more than one closure argument","ruleIdentifier":"multiple_closures_with_trailing_closure"}},{"text":"                Button(action: { showingYearPicker = true }) {","violation":{"ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument","ruleName":"Multiple Closures with Trailing Closure","reason":"Trailing closure syntax should not be used when passing more than one closure argument","location":{"character":62,"line":255,"file":"My Year\/Views\/CustomCalendarView.swift"},"severity":"warning","ruleIdentifier":"multiple_closures_with_trailing_closure"}},{"text":"                {","violation":{"severity":"warning","ruleName":"Opening Brace Spacing","reason":"Opening braces should be preceded by a single space and on the same line as the declaration","ruleDescription":"The correct positioning of braces that introduce a block of code or member list is highly controversial. No matter which style is preferred, consistency is key. Apart from different tastes, the positioning of braces can also have a significant impact on the readability of the code, especially for visually impaired developers. This rule ensures that braces are preceded by a single space and on the same line as the declaration. Comments between the declaration and the opening brace are respected. Check out the `contrasted_opening_brace` rule for a different style.","ruleIdentifier":"opening_brace","location":{"file":"My Year\/Views\/CustomCalendarView.swift","line":263,"character":17}}},{"text":"                      category in","violation":{"severity":"warning","ruleDescription":"Closure parameters should be on the same line as opening brace","ruleName":"Closure Parameter Position","location":{"line":130,"file":"My Year\/Views\/CustomCalendars\/CreateCalendarView.swift","character":23},"ruleIdentifier":"closure_parameter_position","reason":"Closure parameters should be on the same line as opening brace"}},{"text":"    {","violation":{"severity":"warning","ruleDescription":"The correct positioning of braces that introduce a block of code or member list is highly controversial. No matter which style is preferred, consistency is key. Apart from different tastes, the positioning of braces can also have a significant impact on the readability of the code, especially for visually impaired developers. This rule ensures that braces are preceded by a single space and on the same line as the declaration. Comments between the declaration and the opening brace are respected. Check out the `contrasted_opening_brace` rule for a different style.","ruleName":"Opening Brace Spacing","reason":"Opening braces should be preceded by a single space and on the same line as the declaration","location":{"line":46,"character":5,"file":"My Year\/Views\/CustomCalendars\/EditCalendarView.swift"},"ruleIdentifier":"opening_brace"}},{"text":"                      category in","violation":{"ruleDescription":"Closure parameters should be on the same line as opening brace","ruleName":"Closure Parameter Position","location":{"line":122,"file":"My Year\/Views\/CustomCalendars\/EditCalendarView.swift","character":23},"severity":"warning","reason":"Closure parameters should be on the same line as opening brace","ruleIdentifier":"closure_parameter_position"}},{"text":"            }) {","violation":{"reason":"Trailing closure syntax should not be used when passing more than one closure argument","severity":"warning","ruleIdentifier":"multiple_closures_with_trailing_closure","location":{"character":16,"line":258,"file":"My Year\/Views\/CustomCalendars\/EditCalendarView.swift"},"ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument","ruleName":"Multiple Closures with Trailing Closure"}},{"text":"          }) {","violation":{"severity":"warning","ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument","reason":"Trailing closure syntax should not be used when passing more than one closure argument","ruleIdentifier":"multiple_closures_with_trailing_closure","location":{"line":30,"character":14,"file":"My Year\/Views\/DayValuationPopup.swift"},"ruleName":"Multiple Closures with Trailing Closure"}},{"text":"          }) {","violation":{"ruleIdentifier":"multiple_closures_with_trailing_closure","ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument","ruleName":"Multiple Closures with Trailing Closure","severity":"warning","location":{"file":"My Year\/Views\/Entry\/CounterEntryModule.swift","line":19,"character":14},"reason":"Trailing closure syntax should not be used when passing more than one closure argument"}},{"text":"          }) {","violation":{"ruleIdentifier":"multiple_closures_with_trailing_closure","severity":"warning","reason":"Trailing closure syntax should not be used when passing more than one closure argument","location":{"file":"My Year\/Views\/Entry\/CounterEntryModule.swift","character":14,"line":38},"ruleDescription":"Trailing closure syntax should not be used when passing more than one closure argument","ruleName":"Multiple Closures with Trailing Closure"}},{"text":"  ) -> (columns: Int, rows: Int, horizontalSpacing: CGFloat, verticalSpacing: CGFloat) {","violation":{"ruleIdentifier":"large_tuple","ruleDescription":"Tuples shouldn't have too many members. Create a custom type instead.","location":{"line":214,"character":8,"file":"My Year\/Views\/YearGrid.swift"},"ruleName":"Large Tuple","severity":"error","reason":"Tuples should have at most 2 members"}},{"text":"        \/\/ In UI tests it’s important to set the initial state - such as interface orientation - required for your tests before they run. The setUp method is a good place to do this.","violation":{"ruleDescription":"Lines should not span too many characters.","ruleName":"Line Length","ruleIdentifier":"line_length","severity":"warning","reason":"Line should be 110 characters or less; currently it has 182 characters","location":{"file":"My YearUITests\/My_YearUITests.swift","line":18}}},{"text":"        \/\/ Put teardown code here. This method is called after the invocation of each test method in the class.","violation":{"ruleDescription":"Lines should not span too many characters.","ruleIdentifier":"line_length","ruleName":"Line Length","severity":"warning","location":{"line":22,"file":"My YearUITests\/My_YearUITests.swift"},"reason":"Line should be 110 characters or less; currently it has 111 characters"}},{"text":"    override class var runsForEachTargetApplicationUIConfiguration: Bool {","violation":{"ruleDescription":"Prefer `static` over `class` when the declaration is not allowed to be overridden in child classes due to its context being final. Likewise, the compiler complains about `open` being used in `final` classes.","reason":"Prefer `static` over `class` in a final class","location":{"file":"My YearUITests\/My_YearUITestsLaunchTests.swift","line":12,"character":5},"ruleName":"Static Over Final Class","ruleIdentifier":"static_over_final_class","severity":"warning"}},{"text":"        let buildPath = \"\/Users\/g.cattorini\/001_Projects\/My Year\/SharedModels\/.build\/arm64-apple-macosx\/debug\/SharedModels_SharedModels.bundle\"","violation":{"location":{"file":"SharedModels\/.build\/arm64-apple-macosx\/debug\/SharedModels.build\/DerivedSources\/resource_bundle_accessor.swift","line":6},"severity":"warning","ruleDescription":"Lines should not span too many characters.","reason":"Line should be 110 characters or less; currently it has 143 characters","ruleName":"Line Length","ruleIdentifier":"line_length"}},{"text":"}","violation":{"severity":"warning","ruleDescription":"Files should have a single trailing newline","reason":"Files should have a single trailing newline","location":{"file":"SharedModels\/.build\/arm64-apple-macosx\/debug\/SharedModels.build\/DerivedSources\/resource_bundle_accessor.swift","line":17},"ruleName":"Trailing Newline","ruleIdentifier":"trailing_newline"}},{"text":"  \/\/ TODO: Remove this function (LEGACY)","violation":{"location":{"file":"SharedModels\/Sources\/SharedModels\/SharedModels.swift","character":6,"line":483},"severity":"warning","ruleDescription":"TODOs and FIXMEs should be resolved.","reason":"TODOs should be resolved (Remove this function (LEGACY))","ruleIdentifier":"todo","ruleName":"Todo"}},{"text":"        if case .mood(_) = entry.type {","violation":{"location":{"line":655,"character":22,"file":"SharedModels\/Sources\/SharedModels\/SharedModels.swift"},"ruleIdentifier":"empty_enum_arguments","ruleName":"Empty Enum Arguments","severity":"warning","reason":"Arguments can be omitted when matching enums with associated values if they are not used","ruleDescription":"Arguments can be omitted when matching enums with associated values if they are not used"}},{"text":"  {","violation":{"ruleIdentifier":"opening_brace","ruleDescription":"The correct positioning of braces that introduce a block of code or member list is highly controversial. No matter which style is preferred, consistency is key. Apart from different tastes, the positioning of braces can also have a significant impact on the readability of the code, especially for visually impaired developers. This rule ensures that braces are preceded by a single space and on the same line as the declaration. Comments between the declaration and the opening brace are respected. Check out the `contrasted_opening_brace` rule for a different style.","location":{"character":3,"line":712,"file":"SharedModels\/Sources\/SharedModels\/SharedModels.swift"},"ruleName":"Opening Brace Spacing","severity":"warning","reason":"Opening braces should be preceded by a single space and on the same line as the declaration"}},{"text":"}","violation":{"ruleDescription":"Files should not span too many lines.","ruleName":"File Length","location":{"line":737,"file":"SharedModels\/Sources\/SharedModels\/SharedModels.swift"},"reason":"File should contain 500 lines or less: currently contains 737","ruleIdentifier":"file_length","severity":"warning"}},{"text":"    ","violation":{"ruleIdentifier":"trailing_whitespace","ruleDescription":"Lines should not have trailing whitespace","location":{"file":"YearEvaluationWidget\/YearEvaluationWidget.swift","line":25},"reason":"Lines should not have trailing whitespace","severity":"warning","ruleName":"Trailing Whitespace"}},{"text":"    ","violation":{"severity":"warning","location":{"file":"YearEvaluationWidget\/YearEvaluationWidget.swift","line":33},"reason":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace","ruleDescription":"Lines should not have trailing whitespace","ruleIdentifier":"trailing_whitespace"}},{"text":"    ","violation":{"ruleName":"Trailing Whitespace","severity":"warning","reason":"Lines should not have trailing whitespace","ruleIdentifier":"trailing_whitespace","ruleDescription":"Lines should not have trailing whitespace","location":{"line":41,"file":"YearEvaluationWidget\/YearEvaluationWidget.swift"}}},{"text":"    func getSnapshot(in context: Context, completion: @escaping (SimpleEntry) -> ()) {","violation":{"ruleName":"Void Return","ruleDescription":"Prefer `-> Void` over `-> ()`","location":{"character":82,"line":68,"file":"YearEvaluationWidget\/YearEvaluationWidget.swift"},"reason":"Prefer `-> Void` over `-> ()`","severity":"warning","ruleIdentifier":"void_return"}},{"text":"        let entry = SimpleEntry(date: Date(), valuations: store.valuations, visualizationType: getCurrentVisualizationType())","violation":{"severity":"warning","ruleDescription":"Lines should not span too many characters.","ruleIdentifier":"line_length","ruleName":"Line Length","location":{"line":71,"file":"YearEvaluationWidget\/YearEvaluationWidget.swift"},"reason":"Line should be 110 characters or less; currently it has 125 characters"}},{"text":"    func getTimeline(in context: Context, completion: @escaping (Timeline<Entry>) -> ()) {","violation":{"ruleName":"Void Return","severity":"warning","location":{"line":76,"character":86,"file":"YearEvaluationWidget\/YearEvaluationWidget.swift"},"reason":"Prefer `-> Void` over `-> ()`","ruleDescription":"Prefer `-> Void` over `-> ()`","ruleIdentifier":"void_return"}},{"text":"        ","violation":{"ruleIdentifier":"trailing_whitespace","location":{"file":"YearEvaluationWidget\/YearEvaluationWidget.swift","line":79},"ruleDescription":"Lines should not have trailing whitespace","severity":"warning","ruleName":"Trailing Whitespace","reason":"Lines should not have trailing whitespace"}},{"text":"        let entry = SimpleEntry(date: Date(), valuations: store.valuations, visualizationType: getCurrentVisualizationType())","violation":{"location":{"line":81,"file":"YearEvaluationWidget\/YearEvaluationWidget.swift"},"ruleIdentifier":"line_length","reason":"Line should be 110 characters or less; currently it has 125 characters","severity":"warning","ruleName":"Line Length","ruleDescription":"Lines should not span too many characters."}},{"text":"        ","violation":{"ruleIdentifier":"trailing_whitespace","ruleDescription":"Lines should not have trailing whitespace","location":{"line":83,"file":"YearEvaluationWidget\/YearEvaluationWidget.swift"},"reason":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace","severity":"warning"}},{"text":"        ","violation":{"reason":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace","severity":"warning","location":{"line":87,"file":"YearEvaluationWidget\/YearEvaluationWidget.swift"},"ruleDescription":"Lines should not have trailing whitespace","ruleIdentifier":"trailing_whitespace"}},{"text":"    ","violation":{"ruleDescription":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace","reason":"Lines should not have trailing whitespace","ruleIdentifier":"trailing_whitespace","location":{"file":"YearEvaluationWidget\/YearEvaluationWidget.swift","line":97},"severity":"warning"}},{"text":"     ","violation":{"severity":"warning","ruleIdentifier":"trailing_whitespace","ruleName":"Trailing Whitespace","location":{"line":69,"file":"YearEvaluationWidget\/YearEvaluationWidgetLiveActivity.swift"},"reason":"Lines should not have trailing whitespace","ruleDescription":"Lines should not have trailing whitespace"}},{"text":"    ","violation":{"ruleIdentifier":"trailing_whitespace","location":{"line":14,"file":"YearWidget\/YearWidget.swift"},"ruleName":"Trailing Whitespace","ruleDescription":"Lines should not have trailing whitespace","severity":"warning","reason":"Lines should not have trailing whitespace"}},{"text":"    func getSnapshot(in context: Context, completion: @escaping (SimpleEntry) -> ()) {","violation":{"severity":"warning","ruleDescription":"Prefer `-> Void` over `-> ()`","reason":"Prefer `-> Void` over `-> ()`","ruleIdentifier":"void_return","ruleName":"Void Return","location":{"file":"YearWidget\/YearWidget.swift","line":19,"character":82}}},{"text":"    func getTimeline(in context: Context, completion: @escaping (Timeline<Entry>) -> ()) {","violation":{"ruleDescription":"Prefer `-> Void` over `-> ()`","location":{"line":27,"character":86,"file":"YearWidget\/YearWidget.swift"},"severity":"warning","reason":"Prefer `-> Void` over `-> ()`","ruleName":"Void Return","ruleIdentifier":"void_return"}},{"text":"        ","violation":{"location":{"file":"YearWidget\/YearWidget.swift","line":30},"ruleIdentifier":"trailing_whitespace","severity":"warning","reason":"Lines should not have trailing whitespace","ruleDescription":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace"}},{"text":"        ","violation":{"ruleIdentifier":"trailing_whitespace","ruleDescription":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace","severity":"warning","location":{"line":34,"file":"YearWidget\/YearWidget.swift"},"reason":"Lines should not have trailing whitespace"}},{"text":"        ","violation":{"ruleIdentifier":"trailing_whitespace","ruleDescription":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace","reason":"Lines should not have trailing whitespace","severity":"warning","location":{"file":"YearWidget\/YearWidget.swift","line":38}}},{"text":"    ","violation":{"ruleName":"Trailing Whitespace","reason":"Lines should not have trailing whitespace","ruleDescription":"Lines should not have trailing whitespace","location":{"line":49,"file":"YearWidget\/YearWidget.swift"},"severity":"warning","ruleIdentifier":"trailing_whitespace"}},{"text":"    ","violation":{"ruleName":"Trailing Whitespace","reason":"Lines should not have trailing whitespace","severity":"warning","ruleIdentifier":"trailing_whitespace","location":{"file":"YearWidget\/YearWidget.swift","line":62},"ruleDescription":"Lines should not have trailing whitespace"}},{"text":"        ","violation":{"ruleDescription":"Lines should not have trailing whitespace","severity":"warning","ruleIdentifier":"trailing_whitespace","ruleName":"Trailing Whitespace","location":{"file":"YearWidget\/YearWidget.swift","line":65},"reason":"Lines should not have trailing whitespace"}},{"text":"        ","violation":{"location":{"file":"YearWidget\/YearWidget.swift","line":69},"ruleName":"Trailing Whitespace","ruleIdentifier":"trailing_whitespace","reason":"Lines should not have trailing whitespace","severity":"warning","ruleDescription":"Lines should not have trailing whitespace"}},{"text":"        ","violation":{"location":{"line":73,"file":"YearWidget\/YearWidget.swift"},"severity":"warning","ruleName":"Trailing Whitespace","ruleDescription":"Lines should not have trailing whitespace","ruleIdentifier":"trailing_whitespace","reason":"Lines should not have trailing whitespace"}},{"text":"        ","violation":{"severity":"warning","location":{"file":"YearWidget\/YearWidget.swift","line":77},"reason":"Lines should not have trailing whitespace","ruleIdentifier":"trailing_whitespace","ruleDescription":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace"}},{"text":"    ","violation":{"ruleIdentifier":"trailing_whitespace","location":{"line":80,"file":"YearWidget\/YearWidget.swift"},"reason":"Lines should not have trailing whitespace","severity":"warning","ruleDescription":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace"}},{"text":"                ","violation":{"location":{"file":"YearWidget\/YearWidget.swift","line":100},"ruleName":"Trailing Whitespace","ruleIdentifier":"trailing_whitespace","ruleDescription":"Lines should not have trailing whitespace","severity":"warning","reason":"Lines should not have trailing whitespace"}},{"text":"            ","violation":{"severity":"warning","ruleIdentifier":"trailing_whitespace","ruleDescription":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace","location":{"file":"YearWidget\/YearWidget.swift","line":113},"reason":"Lines should not have trailing whitespace"}},{"text":"            ","violation":{"ruleName":"Vertical Whitespace","ruleDescription":"Limit vertical whitespace to a single empty line.","severity":"warning","reason":"Limit vertical whitespace to a single empty line; currently 2","location":{"file":"YearWidget\/YearWidget.swift","line":113},"ruleIdentifier":"vertical_whitespace"}},{"text":"                ","violation":{"location":{"file":"YearWidget\/YearWidget.swift","line":119},"reason":"Lines should not have trailing whitespace","severity":"warning","ruleName":"Trailing Whitespace","ruleIdentifier":"trailing_whitespace","ruleDescription":"Lines should not have trailing whitespace"}},{"text":"                let horizontalSpacing = (geometry.size.width - (dotSize * CGFloat(columns))) \/ CGFloat(columns - 1)","violation":{"ruleDescription":"Lines should not span too many characters.","location":{"file":"YearWidget\/YearWidget.swift","line":120},"ruleName":"Line Length","severity":"warning","reason":"Line should be 110 characters or less; currently it has 115 characters","ruleIdentifier":"line_length"}},{"text":"                ","violation":{"ruleName":"Trailing Whitespace","severity":"warning","ruleIdentifier":"trailing_whitespace","location":{"file":"YearWidget\/YearWidget.swift","line":122},"reason":"Lines should not have trailing whitespace","ruleDescription":"Lines should not have trailing whitespace"}},{"text":"    ","violation":{"ruleDescription":"Lines should not have trailing whitespace","ruleIdentifier":"trailing_whitespace","location":{"file":"YearWidget\/YearWidget.swift","line":150},"severity":"warning","reason":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace"}},{"text":"    ","violation":{"ruleIdentifier":"trailing_whitespace","reason":"Lines should not have trailing whitespace","ruleDescription":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace","severity":"warning","location":{"file":"YearWidget\/YearWidget.swift","line":161}}},{"text":"} ","violation":{"ruleIdentifier":"trailing_newline","ruleDescription":"Files should have a single trailing newline","ruleName":"Trailing Newline","severity":"warning","location":{"file":"YearWidget\/YearWidgetBundle.swift","line":9},"reason":"Files should have a single trailing newline"}},{"text":"} ","violation":{"reason":"Lines should not have trailing whitespace","location":{"file":"YearWidget\/YearWidgetBundle.swift","line":9},"ruleIdentifier":"trailing_whitespace","ruleDescription":"Lines should not have trailing whitespace","ruleName":"Trailing Whitespace","severity":"warning"}},{"text":"     ","violation":{"ruleDescription":"Lines should not have trailing whitespace","ruleIdentifier":"trailing_whitespace","location":{"file":"YearWidget\/YearWidgetLiveActivity.swift","line":69},"reason":"Lines should not have trailing whitespace","severity":"warning","ruleName":"Trailing Whitespace"}}]